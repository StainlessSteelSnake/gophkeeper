syntax = "proto3";

package services;

option go_package = "github.com/StainlessSteelSnake/gophkeeper/internal/services";

message LoginPassword {
  string login = 1;
  string password = 2;
}

message Token {
  string token = 1;
}

message RegisterRequest {
  LoginPassword login_password = 1;
}

message RegisterResponse {
  Token token = 1;
}

message LoginRequest {
  LoginPassword login_password = 1;
}

message LoginResponse {
  Token token = 1;
}

message LogoutRequest {
  Token token = 1;
}

message LogoutResponse {
}

message GetUserRecordsRequest {
  Token token = 1;
}

message UserRecord {
  int32 id = 1;
  string user_login = 2;
  string record_type = 3;
  string name = 4;
  string metadata = 5;
}

message GetUserRecordsResponse {
  repeated UserRecord user_records = 1;
}

message GetUserRecordRequest {
  Token token = 1;
  int32 id = 2;
}

message GetUserRecordResponse {
  UserRecord user_record = 1;
}

message RecordNameMetadata {
  string name = 1;
  string metadata = 2;
}

message EncryptedLoginPassword {
  bytes encrypted_login = 1;
  bytes encrypted_password = 2;
}

message AddLoginPasswordRequest{
  Token token = 1;
  RecordNameMetadata name_metadata = 2;
  EncryptedLoginPassword encrypted_login_password = 3;
}

message AddLoginPasswordResponse{
  int32 id = 1;
}

message GetLoginPasswordRequest{
  Token token = 1;
  int32 id = 2;
}

message GetLoginPasswordResponse{
  bytes encrypted_login = 1;
  bytes encrypted_password = 2;
}

service GophKeeper {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);

  rpc GetUserRecords(GetUserRecordsRequest) returns (GetUserRecordsResponse);
  rpc GetUserRecord(GetUserRecordRequest) returns (GetUserRecordResponse);

  rpc AddLoginPassword(AddLoginPasswordRequest) returns(AddLoginPasswordResponse);
  rpc GetLoginPassword(GetLoginPasswordRequest) returns(GetLoginPasswordResponse);
}